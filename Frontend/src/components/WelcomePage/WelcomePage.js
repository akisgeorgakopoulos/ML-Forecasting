import React, {useContext, useEffect} from 'react';
import classes from './WelcomePage.module.css';
import HeaderContext from '../../store/header-context';

const WelcomePage = props => {
    
    const headerCtx = useContext(HeaderContext);
    
    useEffect(() => {
        window.scrollTo(0, 0);
        headerCtx.updateCompleted();
      },[headerCtx])

    const showMenuHandler = () =>{
        props.onShowMenu('Menu');
    }

    return(
        <div className={classes["main-content"]}>
            <h1>Σκοπός</h1>
            <p>Μέσω της εφαρμογής αυτής, που δημιουργήθηκε στα πλαίσια διπλωματικής εργασίας, πραγματοποιούμε προβλέψεις χρονοσειρών χρησιμοποιώντας μεθόδους μηχανικής μάθησης.
                Οι αλγόριθμοι τους οποίους διαλέγουμε εμείς βελτιστοποιούνται και εκτελούνται κατανεμημένα μέσω της βιβλιοθήκης Python Dask. Το παρών FrontEnd έχει γίνει με ReactJS.
                Η BackEnd υπηρεσία έχει γίνει με FastAPI, ενώ ως βάση για τις προβλέψεις χρησιμοποιείται η MongoDB.
            </p>
            <h1>Δεδομένα</h1>
            <p>Οι χρονοσειρές μας αφορούν την μέση κατανάλωση μίας τριφασικής γραμμής. Συνεπώς, έχουμε τις φάσεις A,B και C.
               Σε κάθε περίπτωση οι τιμές αντιπροσωπεύουν την ενεργό ισχύ που μετρήθηκε. Τα δεδομένα μας είναι ωριαία και ξεκινούν από 19-12-2021 14:00:00 ενώ φτάνουν εώς 16-01-2022 14:00:00.
            </p>
            <p>Πιο εκτενής παρουσίαση των χρονοσειρών γίνεται επιλέγοντας "Επισκόπηση δεδομένων" στο μενού των επιλογών. Εκεί μπορεί κανείς να δεί όλα τα δεδομένα ή να 
                εστιάσει σε ένα συγκεκριμένο χρονικό διάστημα, αλλά και να επιλέξει τις φάσεις που θέλει να δεί.
            </p>
            <h1>Αλγόριθμοι</h1>
            <p>Σ'αυτήν την εφαρμογή δίνουμε την δυνατότητα στον χρήστη να κάνει προλέψεις με τις Machine Learning μεθόδους Random Forest, K-Nearest Neighbors, Linear Regression, Decision Tree, Support Vector Regressor και Gradient Boosting.</p>
            <p>Επίσης, ο χρήστης μπορεί να δημιουργήσει το δικό του νευρωνικό δίκτυο επιλέγοντας "Πρόβλεψη με NN". Εκεί δημιουργούμε ένα δικό μας νευρωνικό δίκτυο 
                επιλέγοντας πλήθος αισθητήρων νευρώνων, πλήθος κρυφών επιπέδων με συνάρτηση ενεργοποίησης σε κάθε ένα από αυτά, ορίζοντα πρόβλεψης, αριθμό εποχών εκπαίδευσης καθώς και τον ρυθμό εκπαίδευσης.
            </p>
            <p>Σε κάθε περίπτωση οι παράμετροι των αλγορίθμων καθώς και οι βασικές επιλογές της πρόβλεψης(ορίζοντας, μέγεθος δειγμάτων) αφήνονται στον χρήστη.</p>
            <p>Πιο συγκεκριμένα, ο χρήστης επιλέγει για κάθε αλγόριθμο αν θα τον χρησιμοποιήσει καθώς και την μέθοδο με την οποία θα βελτιστοποιηθούν οι υπερπαραμέτροι του. 
                Για αυτό προσφέρονται δύο επιλογές, το GridSearch και το RandomizedSearch. Για την δεύτερη, ο χρήστης επιλέγει το πλήθος των συνδυασμών προς δοκιμή.
            </p>
            <p>Ως μέτρο σύγκρισης της απόδοσης των αλγορίθμων χρησιμοποιείται το MAPE.</p>
            <h1>Παλαιές προβλέψεις</h1>
            <p>Παρέχεται η δυνατότητα στον χρήστη να δεί ολοκληρωμένες προβλέψεις επιλέγοντας "Ολοκληρωμένες προβλέψεις" στο μενού. Κάθε πρόβλεψη συνοδεύεται
                από το MAPE score του καλύτερου αλγορίθμου καθώς και από την ημερομηνία ολοκλήρωσής της. Τέλος, περιλαμβάνονται και οι καλύτερες παράμετροι για κάθε πρόβλεψη.
            </p>
            <br/>
            <div className={classes["btn"]}>
                <p>Για να εμφανιστεί το μενού επιλογών πατήστε το παρακάτω κουμπί</p>
            </div>
            <button className={classes["menu-button"]} onClick={showMenuHandler}>Επιλογές</button>
        </div>
    )
}

export default WelcomePage;